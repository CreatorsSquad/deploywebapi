// <auto-generated />
using System;
using CreatorsSquad.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CreatorsSquad.Migrations
{
    [DbContext(typeof(NGCoreJWT_DbContext))]
    partial class NGCoreJWT_DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("CreatorsSquad.Models.CustPaymentDetail", b =>
                {
                    b.Property<int>("PaymentDetailPKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CelebrityFKID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Currency")
                        .HasColumnType("LONGTEXT");

                    b.Property<int?>("FollowerFKID")
                        .HasColumnType("int");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<int?>("PaymentCapture")
                        .HasColumnType("int");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("RzpayOrderID")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("RzpayPaymentID")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("RzpaySignature")
                        .HasColumnType("LONGTEXT");

                    b.Property<int?>("UnlockedContent_MF_FKID")
                        .HasColumnType("int");

                    b.HasKey("PaymentDetailPKID");

                    b.ToTable("CustPaymentDetails");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_AccountsType", b =>
                {
                    b.Property<int>("AccountsTypePKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountType")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("AccountsTypePKID");

                    b.ToTable("NGCOREJWT_AccountsTypes");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_AudioCollection", b =>
                {
                    b.Property<int>("AudioCollectionPKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AudioCaption")
                        .HasColumnType("LONGTEXT");

                    b.Property<byte[]>("AudioData")
                        .HasColumnType("LONGBLOB");

                    b.Property<string>("AudioDesc")
                        .HasColumnType("LONGTEXT");

                    b.Property<decimal?>("Audio_GSTCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Audio_ServiceCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Audio_TotalCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ContentPriceFKID")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FileName")
                        .HasColumnType("LONGTEXT");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<sbyte?>("IsLocked")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsLocked");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserLoginFKID")
                        .HasColumnType("int");

                    b.HasKey("AudioCollectionPKID");

                    b.ToTable("NGCOREJWT_AudioCollections");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_ContentsPrice", b =>
                {
                    b.Property<int>("ContentPricePKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ContentPrice")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(4000)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(4000)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("ContentPricePKID");

                    b.ToTable("NGCOREJWT_ContentsPrices");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_DocumentCollection", b =>
                {
                    b.Property<int>("DocCollectionPKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ContentPriceFKID")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(4000)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Doct_GSTCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Doct_ServiceCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Doct_TotalCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DocumentCaption")
                        .HasColumnType("LONGTEXT");

                    b.Property<byte[]>("DocumentData")
                        .HasColumnType("LONGBLOB");

                    b.Property<string>("DocumentDesc")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("FileName")
                        .HasColumnType("LONGTEXT");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<sbyte?>("IsLocked")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsLocked");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(4000)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserLoginFKID")
                        .HasColumnType("int");

                    b.HasKey("DocCollectionPKID");

                    b.ToTable("NGCOREJWT_DocumentCollections");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_Email_Notification", b =>
                {
                    b.Property<int>("EmailPKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CelebrityFKID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("FollowerFKID")
                        .HasColumnType("int");

                    b.Property<string>("MessageBody")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("Recepients")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("SenderEmail")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("Subject")
                        .HasColumnType("LONGTEXT");

                    b.HasKey("EmailPKID");

                    b.ToTable("NGCOREJWT_Email_Notifications");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_Exception_ErrorLog", b =>
                {
                    b.Property<int>("ErrorLogPKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ExceptionMessage")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("ExceptionSource")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("ExceptionType")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("ExceptionURL")
                        .HasColumnType("LONGTEXT");

                    b.HasKey("ErrorLogPKID");

                    b.ToTable("NGCOREJWT_Exception_ErrorLogs");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_FollowersLogin", b =>
                {
                    b.Property<int>("FollowersLoginPKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailID")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("FollowersName")
                        .HasColumnType("LONGTEXT");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsApproved")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsApproved");

                    b.Property<sbyte?>("IsCheckedOTP")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsCheckedOTP");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<sbyte?>("IsRegistered")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsRegistered");

                    b.Property<sbyte?>("IsSubscribed")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsSubscribed");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("LONGTEXT");

                    b.Property<int?>("OTP")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserLoginFKID")
                        .HasColumnType("int");

                    b.Property<string>("UserType")
                        .HasColumnType("LONGTEXT");

                    b.HasKey("FollowersLoginPKID");

                    b.ToTable("NGCOREJWT_FollowersLogins");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_GenerateInvoice", b =>
                {
                    b.Property<int>("InvoicePKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CelebrityFKID")
                        .HasColumnType("int");

                    b.Property<int?>("ContentPriceFKID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FollowerEmailID")
                        .HasColumnType("LONGTEXT");

                    b.Property<int?>("FollowerFKID")
                        .HasColumnType("int");

                    b.Property<decimal?>("GSTCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InvDescription")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("LONGTEXT");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<decimal?>("ServiceCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UnlockedContent_MF_FKID")
                        .HasColumnType("int");

                    b.HasKey("InvoicePKID");

                    b.ToTable("NGCOREJWT_GenerateInvoices");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_Log", b =>
                {
                    b.Property<int>("LogsPKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("LoginDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LogoutDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserEmailID")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("UserType")
                        .HasColumnType("LONGTEXT");

                    b.HasKey("LogsPKID");

                    b.ToTable("NGCOREJWT_Logs");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_PaymentSection", b =>
                {
                    b.Property<int>("PaymentSection_PKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Celebrity_FKID")
                        .HasColumnType("int");

                    b.Property<string>("ContentPrice")
                        .HasColumnType("LONGTEXT");

                    b.Property<int?>("ContentPrice_FKID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Followers_FKID")
                        .HasColumnType("int");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<decimal?>("Share_Bank")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Share_Celebrities")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Share_Ours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UnlockedContentMF_FKID")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("PaymentSection_PKID");

                    b.ToTable("NGCOREJWT_PaymentSections");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_PayoutBilling", b =>
                {
                    b.Property<int>("PayoutBillingPKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AadhaarCardNo")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("AccountName")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("AccountNo")
                        .HasColumnType("LONGTEXT");

                    b.Property<int?>("AccountTypeFKID")
                        .HasColumnType("int");

                    b.Property<string>("BillingName")
                        .HasColumnType("LONGTEXT");

                    b.Property<int?>("CelebrityFKID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("IfscCode")
                        .HasColumnType("LONGTEXT");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("PanCardNo")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpiAddress")
                        .HasColumnType("LONGTEXT");

                    b.HasKey("PayoutBillingPKID");

                    b.ToTable("NGCOREJWT_PayoutBillings");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_PersonalEmailID", b =>
                {
                    b.Property<int>("PersonalEmailID_PKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("PEmailID")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("PMobileno")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("PersonalEmailID_PKID");

                    b.ToTable("NGCOREJWT_PersonalEmailIDs");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_PosterTitle", b =>
                {
                    b.Property<int>("PosterTitlePKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("PostersTitle")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("PosterTitlePKID");

                    b.ToTable("NGCOREJWT_PosterTitles");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_Store_Thumbnail", b =>
                {
                    b.Property<int>("ThumbnailImagePKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CelebrityFKID")
                        .HasColumnType("int");

                    b.Property<string>("ContentCaptions")
                        .HasColumnType("LONGTEXT");

                    b.Property<int?>("ContentPriceFKID")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FileName")
                        .HasColumnType("LONGTEXT");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<byte[]>("ThumbnailImage")
                        .HasColumnType("LONGBLOB");

                    b.Property<string>("ThumbnailPath")
                        .HasColumnType("LONGTEXT");

                    b.Property<int?>("UC_LikedCount")
                        .HasColumnType("int");

                    b.Property<int?>("UnlockedContentCount")
                        .HasColumnType("int");

                    b.Property<int?>("UnlockedContentFKID")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("ThumbnailImagePKID");

                    b.ToTable("NGCOREJWT_Store_Thumbnails");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_SuggestComment", b =>
                {
                    b.Property<int>("CommentsPKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CelebrityFKID")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("FollowerFKID")
                        .HasColumnType("int");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<int?>("UnlockedContent_MF_FKID")
                        .HasColumnType("int");

                    b.HasKey("CommentsPKID");

                    b.ToTable("NGCOREJWT_SuggestComments");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_UnlockedContent", b =>
                {
                    b.Property<int>("UnlockedContentPKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CelebrityLoginFKID")
                        .HasColumnType("int");

                    b.Property<string>("ContentCaption")
                        .HasColumnType("LONGTEXT");

                    b.Property<int?>("ContentCollectionFKID")
                        .HasColumnType("int");

                    b.Property<string>("ContentDesc")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("ContentPrice")
                        .HasColumnType("LONGTEXT");

                    b.Property<int?>("ContentPriceFKID")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FileName")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("IconPath")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("IconPath1")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("ImagePath")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("ImagePath1")
                        .HasColumnType("LONGTEXT");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<sbyte?>("IsLocked")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsLocked");

                    b.Property<decimal?>("UC_GSTCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UC_ServiceCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UC_TotalCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("UnlockedContentPKID");

                    b.ToTable("NGCOREJWT_UnlockedContents");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_UnlockedContent_MF", b =>
                {
                    b.Property<int>("UnlockedContent_MF_PKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CelebrityLoginFKID")
                        .HasColumnType("int");

                    b.Property<string>("ContentCaption")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("ContentDesc")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("ContentPrice")
                        .HasColumnType("LONGTEXT");

                    b.Property<int?>("ContentPriceFKID")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DupFileName")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("FileName")
                        .HasColumnType("LONGTEXT");

                    b.Property<int?>("FollowersLoginFKID")
                        .HasColumnType("int");

                    b.Property<decimal?>("GSTCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IconPath")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("ImagePath")
                        .HasColumnType("LONGTEXT");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<sbyte?>("IsLiked")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsLiked");

                    b.Property<sbyte?>("IsLocked")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsLocked");

                    b.Property<decimal?>("ServiceCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UnlockedContentFKID")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("UnlockedContent_MF_PKID");

                    b.ToTable("NGCOREJWT_UnlockedContent_MFs");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_UserLogin", b =>
                {
                    b.Property<int>("UserLoginPKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailID")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("FileName")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("FileType")
                        .HasColumnType("LONGTEXT");

                    b.Property<int?>("FollowersCount")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("LONGTEXT");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsApproved")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsApproved");

                    b.Property<sbyte?>("IsCheckedOTP")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsCheckedOTP");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<sbyte?>("IsRegistered")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsRegistered");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("LONGTEXT");

                    b.Property<int?>("OTP")
                        .HasColumnType("int");

                    b.Property<string>("PersonalityType")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("ProfileBio")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ViewersVisitCount")
                        .HasColumnType("int");

                    b.HasKey("UserLoginPKID");

                    b.ToTable("NGCOREJWT_UserLogins");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_UserProfileDetail", b =>
                {
                    b.Property<int>("UserProfilePKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FileName")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("FileType")
                        .HasColumnType("LONGTEXT");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserLoginFKID")
                        .HasColumnType("int");

                    b.HasKey("UserProfilePKID");

                    b.ToTable("NGCOREJWT_UserProfileDetails");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_UserService", b =>
                {
                    b.Property<int>("UserServicePKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("NewService")
                        .HasColumnType("LONGTEXT");

                    b.Property<int?>("PosterPriceFKID")
                        .HasColumnType("int");

                    b.Property<int?>("PosterTitleFKID")
                        .HasColumnType("int");

                    b.Property<string>("Price")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserLoginFKID")
                        .HasColumnType("int");

                    b.HasKey("UserServicePKID");

                    b.ToTable("NGCOREJWT_UserServices");
                });

            modelBuilder.Entity("CreatorsSquad.Models.NGCOREJWT_VideoCollection", b =>
                {
                    b.Property<int>("VideoCollectionPKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ContentPriceFKID")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FileName")
                        .HasColumnType("LONGTEXT");

                    b.Property<sbyte?>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsActive");

                    b.Property<sbyte?>("IsDeleted")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsDeleted");

                    b.Property<sbyte?>("IsLocked")
                        .HasColumnType("TINYINT")
                        .HasColumnName("IsLocked");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserLoginFKID")
                        .HasColumnType("int");

                    b.Property<string>("VideoCaption")
                        .HasColumnType("LONGTEXT");

                    b.Property<byte[]>("VideoData")
                        .HasColumnType("LONGBLOB");

                    b.Property<string>("VideoDesc")
                        .HasColumnType("LONGTEXT");

                    b.Property<decimal?>("Video_GSTCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Video_ServiceCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Video_TotalCharges")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("VideoCollectionPKID");

                    b.ToTable("NGCOREJWT_VideoCollections");
                });

            modelBuilder.Entity("CreatorsSquad.Models.StoreOTP", b =>
                {
                    b.Property<int>("StoreOTP_PKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CelebrityFKID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("FollowerFKID")
                        .HasColumnType("int");

                    b.Property<int?>("OneTimePassword")
                        .HasColumnType("int");

                    b.Property<string>("UserType")
                        .HasColumnType("LONGTEXT");

                    b.HasKey("StoreOTP_PKID");

                    b.ToTable("StoreOTPs");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            Name = "Celebrity",
                            NormalizedName = "CELEBRITY"
                        },
                        new
                        {
                            Id = "3",
                            Name = "Follower",
                            NormalizedName = "FOLLOWER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
